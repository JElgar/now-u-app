name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches: [dev]
  pull_request: 
    branches: [dev]
    
# on: push    # Default will running for every branch.
    
jobs:
  build-android:
    if: false
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
    
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v1
      with:
        channel: 'dev' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
    
    # Get flutter dependencies.
    - run: flutter pub get
    
    # Build apk.
    - run: flutter build apk --release
    
    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v1
      with:
        name: release-apk
        path: build/app/outputs/apk/release/app-release.apk


  build-ios:
    runs-on: macos-latest
    steps:  
    - name: Checkout repository
      uses: actions/checkout@v1
    
    - name: Install gpg
      run: brew install gnupg

    - name: Setup provisioning profile
      env:
        IOS_GPG_KEY_PROV: ${{ secrets.IOS_GPG_KEY_PROV }}
        IOS_GPG_KEY_P12: ${{ secrets.IOS_GPG_KEY_P12 }}
        IOS_P12_KEY: ${{ secrets.IOS_P12_KEY }}
      run: ./.github/secrets/decrypt_secrets.sh

    # Setup the flutter environment.
    - name: Flutter action
      uses: subosito/flutter-action@v1.4.0
      with:
        channel: 'dev' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
    
    - name: Flutter doctor
      run: flutter doctor

    # Get flutter dependencies.
    - run: flutter pub get
    
    - name: Build iOS app without signing
      run: flutter build ios --release --no-codesign

    - name: Creating IPA file
      run: |
        cd build/ios/iphoneos
        mkdir Payload
        mv Runner.app Payload/
        zip -0 -y -r app.ipa Payload 

    - name: Sign IPA
      run: |
        cd build/ios/iphoneos
        security unlock-keychain -p "" ~/Library/Keychains/build.keychain
        codesign -f -s "${{ secrets.IOS_CERT_SHA1 }}" -v app.ipa
        codesign -vv app.ipa

    # Upload generated apk to the artifacts.
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v1
      with:
        name: release-ios
        path: build/ios/iphoneos/app.ipa

    - name: Publishing app to TestFlight
      if: success()
      env:
        APPLEID_USERNAME: ${{ secrets.APPLEID_USERNAME }}
        APPLEID_PASSWORD: ${{ secrets.APPLEID_PASSWORD }}
        IPA_PATH: "build/ios/iphoneos/app.ipa"
      run: ./.github/scripts/publish_testflight.sh