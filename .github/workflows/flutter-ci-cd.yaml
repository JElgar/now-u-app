name: Flutter CI CD

# This workflow is triggered on pushes to the repository.

on:
  push: 
    branches: [staging, master]
  pull_request:
    branches: [ dev ] # TODO: remove
  workflow_dispatch: # to manually run this workflow
    
# on: push    # Default will running for every branch.
    
jobs:
  android:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    
    - uses: actions/checkout@v2
    
    # Setup Java environment in order to build the Android app.
    - uses: actions/setup-java@v1
      with:
        java-version: '11.x'
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
    
    # Run flutter doctor.
    - run: flutter doctor

    # Get flutter dependencies.
    - run: flutter pub get
    
    # Build apk
    - run: flutter build apk --release -v
    
    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v1
      with:
        name: release-android
        path: build/app/outputs/apk/release/apk-release.apk


  ios:
    if: false
    runs-on: macos-latest
    timeout-minutes: 30
    steps:  
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 12.2

    - name: Install gpg
      run: brew install gnupg

    - name: Setup provisioning profile
      env:
        IOS_GPG_KEY_PROV: ${{ secrets.IOS_GPG_KEY_PROV }}
        IOS_GPG_KEY_P12: ${{ secrets.IOS_GPG_KEY_P12 }}
        IOS_P12_KEY: ${{ secrets.IOS_P12_KEY }}
      run: ./.github/secrets/decrypt_secrets.sh

    # Setup the flutter environment.
    - name: Flutter action
      uses: subosito/flutter-action@v1.4.0
      with:
        channel: 'dev' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
    
    - name: Flutter doctor
      run: flutter doctor

    # Get flutter dependencies.
    - run: flutter pub get

    - run: flutter build ios --no-codesign

    - run: pod install
      working-directory: 'ios/'

    - name: Build iOS app with signing
      run: ../.github/scripts/build_ios.sh
      working-directory: 'ios/'

    - name: Creating IPA file
      run: ../.github/scripts/create_ipa.sh
      working-directory: 'ios/'

    # Upload generated ipa to the artifacts.
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v1
      with:
        name: release-ios
        path: ios/build/nowu.ipa

    - name: Publishing app to TestFlight
      if: success()
      env:
        APPLEID_USERNAME: ${{ secrets.APPLEID_USERNAME }}
        APPLEID_PASSWORD: ${{ secrets.APPLEID_PASSWORD }}
        IPA_PATH: "build/ios/iphoneos/nowu.ipa"
      run: ./.github/scripts/publish_testflight.sh
