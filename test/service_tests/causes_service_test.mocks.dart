// Mocks generated by Mockito 5.0.15 from annotations
// in app/test/service_tests/causes_service_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:app/models/Action.dart' as _i7;
import 'package:app/models/Cause.dart' as _i6;
import 'package:app/services/api_service.dart' as _i3;
import 'package:flutter/widgets.dart' as _i4;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeClient_0 extends _i1.Fake implements _i2.Client {}

class _FakeApiException_1 extends _i1.Fake implements _i3.ApiException {}

class _FakeIconData_2 extends _i1.Fake implements _i4.IconData {}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_0()) as _i2.Client);
  @override
  set client(_i2.Client? _client) =>
      super.noSuchMethod(Invocation.setter(#client, _client),
          returnValueForMissingStub: null);
  @override
  String get baseUrl =>
      (super.noSuchMethod(Invocation.getter(#baseUrl), returnValue: '')
          as String);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  String get baseUrlPath =>
      (super.noSuchMethod(Invocation.getter(#baseUrlPath), returnValue: '')
          as String);
  @override
  set baseUrlPath(String? _baseUrlPath) =>
      super.noSuchMethod(Invocation.setter(#baseUrlPath, _baseUrlPath),
          returnValueForMissingStub: null);
  @override
  _i3.ApiException getExceptionForResponse(_i2.Response? response) => (super
      .noSuchMethod(Invocation.method(#getExceptionForResponse, [response]),
          returnValue: _FakeApiException_1()) as _i3.ApiException);
  @override
  Map<String, String> getRequestHeaders() =>
      (super.noSuchMethod(Invocation.method(#getRequestHeaders, []),
          returnValue: <String, String>{}) as Map<String, String>);
  @override
  _i5.Future<Map<dynamic, dynamic>> getRequest(String? path,
          {Map<String, dynamic>? params}) =>
      (super.noSuchMethod(
              Invocation.method(#getRequest, [path], {#params: params}),
              returnValue:
                  Future<Map<dynamic, dynamic>>.value(<dynamic, dynamic>{}))
          as _i5.Future<Map<dynamic, dynamic>>);
  @override
  _i5.Future<List<Map<String, dynamic>>> getListRequest(String? path,
          {Map<String, dynamic>? params, int? limit = 5}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getListRequest, [path], {#params: params, #limit: limit}),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i5.Future<List<Map<String, dynamic>>>);
  @override
  _i5.Future<Map<String, dynamic>> postRequest(String? path,
          {Map<String, dynamic>? body}) =>
      (super.noSuchMethod(
              Invocation.method(#postRequest, [path], {#body: body}),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i5.Future<Map<String, dynamic>>);
  @override
  _i5.Future<Map<dynamic, dynamic>> putRequest(String? path,
          {Map<String, dynamic>? body}) =>
      (super.noSuchMethod(Invocation.method(#putRequest, [path], {#body: body}),
              returnValue:
                  Future<Map<dynamic, dynamic>>.value(<dynamic, dynamic>{}))
          as _i5.Future<Map<dynamic, dynamic>>);
  @override
  _i5.Future<Map<dynamic, dynamic>> deleteRequest(String? path) =>
      (super.noSuchMethod(Invocation.method(#deleteRequest, [path]),
              returnValue:
                  Future<Map<dynamic, dynamic>>.value(<dynamic, dynamic>{}))
          as _i5.Future<Map<dynamic, dynamic>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [Cause].
///
/// See the documentation for Mockito's code generation for more information.
class MockCause extends _i1.Mock implements _i6.Cause {
  MockCause() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i7.ListCauseAction> get actions =>
      (super.noSuchMethod(Invocation.getter(#actions),
          returnValue: <_i7.ListCauseAction>[]) as List<_i7.ListCauseAction>);
  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);
  @override
  String get title =>
      (super.noSuchMethod(Invocation.getter(#title), returnValue: '')
          as String);
  @override
  _i4.IconData get icon => (super.noSuchMethod(Invocation.getter(#icon),
      returnValue: _FakeIconData_2()) as _i4.IconData);
  @override
  String get description =>
      (super.noSuchMethod(Invocation.getter(#description), returnValue: '')
          as String);
  @override
  bool get selected =>
      (super.noSuchMethod(Invocation.getter(#selected), returnValue: false)
          as bool);
  @override
  String get headerImage =>
      (super.noSuchMethod(Invocation.getter(#headerImage), returnValue: '')
          as String);
  @override
  String toString() => super.toString();
}
